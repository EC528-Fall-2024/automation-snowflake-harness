---

import { LANGUAGES, type LanguageKeys } from '@/i18n/ui'
import { DEFAULT_LANGUAGE_CODE } from '@/config'

const langFromURL = Astro.url.pathname.split('/')[1] || DEFAULT_LANGUAGE_CODE
const lang: LanguageKeys = langFromURL as LanguageKeys
---

<div class="relative z-10">
  <button
    class="flex items-center gap-4 rounded-base p-2 px-4 transition-[background-color] duration-300 hover:bg-black/10 dark:hover:bg-white/10 w500:gap-2 w500:p-2"
    data-active="false"
    id="select-btn"
  >
    <span class="w800:hidden">
      {LANGUAGES[lang]}
    </span>

    <svg
      class="hidden h-6 w-6 shrink-0 w800:inline w500:h-5 w500:w-5"
      xmlns="http://www.w3.org/2000/svg"
      viewBox="0 0 24 24"
      fill="none"
    >
      <path
        class="fill-lightModeIcon/80 dark:fill-darkModeIcon/80"
        d="M20.58 19.37L17.59 11.01C17.38 10.46 16.91 10.12 16.37 10.12C15.83 10.12 15.37 10.46 15.14 11.03L12.16 19.37C12.02 19.76 12.22 20.19 12.61 20.33C13 20.47 13.43 20.27 13.57 19.88L14.19 18.15H18.54L19.16 19.88C19.27 20.19 19.56 20.38 19.87 20.38C19.95 20.38 20.04 20.37 20.12 20.34C20.51 20.2 20.71 19.77 20.57 19.38L20.58 19.37ZM14.74 16.64L16.38 12.05L18.02 16.64H14.74ZM12.19 7.85C9.92999 11.42 7.89 13.58 5.41 15.02C5.29 15.09 5.16 15.12 5.04 15.12C4.78 15.12 4.53 14.99 4.39 14.75C4.18 14.39 4.3 13.93 4.66 13.73C6.75999 12.51 8.48 10.76 10.41 7.86H4.12C3.71 7.86 3.37 7.52 3.37 7.11C3.37 6.7 3.71 6.36 4.12 6.36H7.87V4.38C7.87 3.97 8.21 3.63 8.62 3.63C9.02999 3.63 9.37 3.97 9.37 4.38V6.36H13.12C13.53 6.36 13.87 6.7 13.87 7.11C13.87 7.52 13.53 7.86 13.12 7.86H12.18L12.19 7.85ZM12.23 15.12C12.1 15.12 11.97 15.09 11.85 15.02C11.2 14.64 10.57 14.22 9.97999 13.78C9.64999 13.53 9.58 13.06 9.83 12.73C10.08 12.4 10.55 12.33 10.88 12.58C11.42 12.99 12.01 13.37 12.61 13.72C12.97 13.93 13.09 14.39 12.88 14.75C12.74 14.99 12.49 15.12 12.23 15.12Z"
      ></path>
    </svg>

    <svg
      aria-hidden="true"
      class="h-4 w-4 shrink-0 transition-transform"
      xmlns="http://www.w3.org/2000/svg"
      viewBox="0 0 24 24"
      id="chevron"
      fill="none"
    >
      <path
        class="stroke-lightModeIcon/80 dark:stroke-darkModeIcon/80"
        d="M4 9L12 17L20 9"
        stroke-width="1.5"
        stroke-linecap="round"
        stroke-linejoin="round"></path>
    </svg>
  </button>
  <div
    id="language-dropdown"
    class="duration invisible absolute right-0 top-16 w-min rounded-base opacity-0 outline outline-1 outline-black/20 transition-all dark:outline-white/20"
  >
    {
      Object.entries(LANGUAGES).map(([key, value]) => {
        return (
          <button
            class="flex w-full items-center justify-between bg-lightModeBg px-6 py-2 text-left transition-[background-color] duration-300 first-of-type:rounded-t-base last-of-type:rounded-b-base hover:bg-lightModeBgHover dark:bg-darkModeBg dark:hover:bg-darkModeBgHover"
            data-lang={key}
          >
            <span class="mr-6">{value}</span>

            {key === lang && (
              <svg
                xmlns="http://www.w3.org/2000/svg"
                viewBox="0 0 24 24"
                class="h-6 w-6"
                fill="none"
              >
                <path
                  d="M5 13.3636L8.03559 16.3204C8.42388 16.6986 9.04279 16.6986 9.43108 16.3204L19 7"
                  class="stroke-lightModeIcon dark:stroke-darkModeIcon"
                  stroke-linecap="round"
                  stroke-linejoin="round"
                />
              </svg>
            )}
          </button>
        )
      })
    }
  </div>
</div>

<script>
  import { type LanguageKeys } from '@/i18n/ui'
  import { DEFAULT_LANGUAGE_CODE } from '@/config'

  const selectSetup = () => {
    const langFromURL = location.pathname.split('/')[1] || DEFAULT_LANGUAGE_CODE
    const lang: LanguageKeys = langFromURL as LanguageKeys

    const selectBtn = document.querySelector('#select-btn')
    const selectBtnIcon = document.querySelector('#select-btn svg#chevron')
    const languageDropdown = document.querySelector('#language-dropdown')

    const languageBtns = document.querySelectorAll(
      '#language-dropdown > button',
    )

    selectBtn!.addEventListener('click', () => {
      const isActive = selectBtn?.getAttribute('data-active') === 'true'

      selectBtn?.setAttribute('data-active', isActive ? 'false' : 'true')

      if (isActive) {
        languageDropdown?.classList.add('invisible', 'opacity-0', 'top-16')
        languageDropdown?.classList.remove('visible', 'opacity-100', 'top-20')
      } else {
        languageDropdown?.classList.add('visible', 'opacity-100', 'top-20')
        languageDropdown?.classList.remove('invisible', 'opacity-0', 'top-16')
      }

      selectBtnIcon?.classList.toggle('rotate-180')
    })

    languageBtns.forEach((btn) => {
      btn.addEventListener('click', () => {
        const selectedLang = btn.getAttribute('data-lang')

        if (selectedLang === lang) return

        if (location.pathname === '/') {
          location.assign(location.origin + '/' + selectedLang)
        } else if (
          location.pathname === `/${lang}` ||
          location.pathname === `/${lang}/`
        ) {
          location.assign(location.origin)
        } else {
          const currentPath = location.pathname.slice(3)

          location.assign(location.origin + `/${selectedLang}` + currentPath)
        }
      })
    })
  }

  selectSetup()

  document.addEventListener('astro:after-swap', selectSetup)
</script>
